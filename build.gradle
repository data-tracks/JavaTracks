import org.jreleaser.gradle.plugin.JReleaserExtension

plugins {
    id 'java'
    // MIT
    id "io.freefair.lombok" version "8.10.2"
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id 'org.jreleaser' version "1.19.0"
}

java {
    sourceCompatibility = 1.16
    targetCompatibility = 1.16
}

// Ensure source and target compatibility
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17) // Or your desired Java version
    }
}

ext {
    appVersion = "0.0.1"
}


group = 'dev.datatracks'
version = appVersion

repositories {
    mavenCentral()
}

dependencies {
    // Apache 2.0
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.18.1'
    // Apache 2.0
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.18.1'
    // Apache 2.0
    implementation group: 'com.google.flatbuffers', name: 'flatbuffers-java', version: '24.3.25'
    // Apache 2.0
    compileOnly 'org.jetbrains:annotations:26.0.2'


// Testing
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

tasks.withType(JavaCompile).configureEach {
    options.annotationProcessorPath = configurations.annotationProcessor
}

tasks.register('copyProtocol', Copy) {
    dependsOn(":generateEffectiveLombokConfig")

    from "protocol/generated/java/protocol"
    into layout.buildDirectory.dir("generated/flatbuffers").get().asFile
}

compileJava.dependsOn copyProtocol

sourceSets {
    main {
        java {
            srcDir "$buildDir/generated/flatbuffers"  // Adds generated FlatBuffers classes to Java source
        }
    }
}

test {
    useJUnitPlatform()
}

jar {
    enabled = true
    archiveBaseName = 'JavaTracks'
    archiveVersion = appVersion
    archiveFileName = 'javatracks.jar'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            // Optional: Customize artifactId if different from project name
            // artifactId = 'my-awesome-library'

            pom {
                name = 'JavaTracks'
                description = 'Java client to interact with DataTracks.'
                url = 'https://github.com/data-tracks/JavaTracks'
                licenses {
                    license {
                        name = 'The GNU General Public License v3.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'datomo'
                        name = 'David Lengweiler'
                        email = 'dave.lengw@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/data-tracks/JavaTracks.git'
                    developerConnection = 'scm:git:ssh://github.com:data-tracks/JavaTracks.git'
                    url = 'https://github.com/data-tracks/JavaTracks'
                }
            }
        }
    }
    repositories {
        maven {
            name = "OSSRH"
            url = uri("https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/")
            credentials {
                username = System.getenv("MAVEN_USERNAME")
                password = System.getenv("MAVEN_PASSWORD")
            }
        }
    }
}

signing {
    setRequired {
        gradle.taskGraph.allTasks.any { it.name.contains("LocalMavenWithChecksums") }
    }
    sign publishing.publications.mavenJava
}


jreleaser {
    signing {
        active = 'ALWAYS'
        armored = true
    }
    deploy {
        maven {
            mavenCentral {
                sonatype {
                    active = 'ALWAYS'
                    url = 'https://central.sonatype.com/api/v1/publisher'
                    stagingRepository('build/libs')
                }
            }
        }
    }
}
